{"version":3,"file":"main.5d01fd268ba78962154f.hot-update.js","sources":["webpack:///../core/foundations/index.ts","webpack:///../core/foundations/radii.ts","webpack:///../core/foundations/responsive.ts","webpack:///../core/foundations/shadow.ts","webpack:///../core/foundations/token.ts","webpack:///../core/index.ts","webpack:///./src/components/Avatar/components/Avatar.styled.tsx","webpack:///./stitches.config.ts"],"sourcesContent":["import colors, { SampinganColorsPallete, SampinganColors } from \"./token\";\nimport responsive, {\n  Breakpoints,\n  MediaQueries,\n  Responsive,\n} from \"./responsive\";\nimport shadows, { ShadowType, Shadows } from \"./shadow\";\nimport radii, { RadiiTypes, Radii } from \"./radii\";\n\nexport interface Foundations {\n  colors: SampinganColors;\n  responsive: Responsive;\n  shadows: Shadows;\n  radii: Radii;\n}\n\nexport type {\n  SampinganColors,\n  SampinganColorsPallete,\n  Breakpoints,\n  MediaQueries,\n  ShadowType,\n  RadiiTypes,\n  Radii,\n};\n\nconst foundations: Foundations = {\n  colors,\n  responsive,\n  shadows,\n  radii,\n};\n\nexport default foundations;\n","const radii = {\n  square: \"0px\",\n  semi_rounded: \"6px\",\n  rounded: \"12px\",\n  circle: \"9999px\",\n};\n\nexport type Radii = typeof radii;\nexport type RadiiTypes = keyof typeof radii;\n\nexport default radii;\n","/**\n * breackpoints in px\n */\nconst breakpoints = {\n  \"@xs\": 360,\n  \"@sm\": 640,\n  \"@md\": 840,\n  \"@lg\": 1024,\n  \"@xl\": 1200,\n  \"@xxl\": 1440,\n};\n\n/**\n * for stitches only\n */\nconst mediaQueries: MediaQueries = (() => {\n  const media_query = {} as MediaQueries;\n  for (const points in breakpoints) {\n    media_query[points] = `min-width: ${breakpoints[points]}px`;\n  }\n  return media_query;\n})();\n\nconst responsive = {\n  breakpoints,\n  mediaQueries,\n};\n\nexport type Breakpoints = keyof typeof breakpoints;\nexport type MediaQueries = Record<Breakpoints, string>;\nexport type Responsive = typeof responsive;\n\nexport default responsive;\n","const shadowColor = \"#00000040\";\n\nconst shadows = {\n  none: \"none\",\n  interactive: `0px 1px 2px 0px ${shadowColor}`,\n  hover: `0px 4px 15px -3px ${shadowColor}`,\n  float: `0px 20px 50px -12px ${shadowColor}`,\n};\n\nexport type Shadows = typeof shadows;\nexport type ShadowType = keyof typeof shadows;\n\nexport default shadows;\n","const red = {\n  R50: \"#FFEBEE\",\n  R500: \"#E83730\",\n  R900: \"#BA1816\",\n};\n\nconst green = {\n  G50: \"#E2F3F2\",\n  G500: \"#2A9D90\",\n  G900: \"#195347\",\n};\n\nconst blue = {\n  B50: \"#E2F4FA\",\n  B500: \"#3DA5D9\",\n  B900: \"#215581\",\n};\n\nconst yellow = {\n  Y50: \"#FFF8E1\",\n  Y500: \"#FEC209\",\n  Y900: \"#DC5F00\",\n};\n\nconst neutral = {\n  N50: \"#FFFFFF\",\n  N100: \"#F7F7F7\",\n  N200: \"#ECECEC\",\n  N400: \"#CCCCCC\",\n  N500: \"#C4C4C4\",\n  N600: \"#9B9B9B\",\n  N900: \"#262626\",\n};\n\nconst sampinganUiColors = {\n  ...red,\n  ...green,\n  ...blue,\n  ...yellow,\n  ...neutral,\n};\n\nexport type SampinganColors = typeof sampinganUiColors;\nexport type SampinganColorsPallete = keyof typeof sampinganUiColors;\n\nexport default sampinganUiColors;\n","import foundations, {\n  Breakpoints,\n  Foundations,\n  MediaQueries,\n  SampinganColors,\n  SampinganColorsPallete,\n  ShadowType,\n  Radii,\n  RadiiTypes,\n} from \"./foundations\";\n\nconst { colors, responsive, shadows, radii } = foundations;\n\nexport {\n  colors,\n  responsive,\n  shadows,\n  radii,\n  Breakpoints,\n  Foundations,\n  MediaQueries,\n  SampinganColors,\n  SampinganColorsPallete,\n  ShadowType,\n  Radii,\n  RadiiTypes,\n};\n","import { styled } from \"stitches.config\";\nimport { Root, Image, Fallback } from \"@radix-ui/react-avatar\";\nimport { avatarSize } from \"./Avatar.types\";\n\nexport const AvatarContainer = styled(Root, {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"middle\",\n  overflow: \"hidden\",\n  userSelect: \"none\",\n  backgroundColor: \"$N400\",\n  cursor: \"pointer\",\n  variants: {\n    size: {\n      sm: {\n        size: avatarSize.sm,\n      },\n      md: {\n        size: avatarSize.md,\n      },\n      lg: {\n        size: avatarSize.lg,\n      },\n      xlg: {\n        size: avatarSize.xlg,\n      },\n      hero: {\n        size: avatarSize.hero,\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"lg\",\n  },\n});\n\nexport const AvatarImage = styled(Image, {\n  size: \"100%\",\n  borderRadius: \"inherit\",\n});\nexport const AvatarUsername = styled(Fallback, {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  backgroundColor: \"white\",\n  color: \"$B500\",\n  size: \"100%\",\n});\n","import { createStitches } from \"@stitches/react\";\nimport { colors, responsive, shadows, radii } from \"@sampingan-ui/core\";\n\nexport const { styled, css, keyframes, globalCss, getCssText } = createStitches(\n  {\n    theme: {\n      colors,\n      shadows,\n      radii,\n    },\n    utils: {\n      size: (value: string | number) => ({\n        width: value,\n        height: value,\n      }),\n      insetState: (color: string) => ({\n        boxShadow: `inset 0 0 100px 100px ${color}`,\n      }),\n      usePressed: () => ({\n        \"&:active\": {\n          insetState: \"rgba(0, 0, 0, 0.2)\",\n        },\n      }),\n      useHover: () => ({\n        \"&:hover\": {\n          insetState: \"rgba(255, 255, 255, 0.2)\",\n        },\n      }),\n    },\n    media: responsive.mediaQueries,\n  }\n);\n\nexport const globalStyles = globalCss({\n  \"@font-face\": {\n    fontFamily: `'Roboto', sans-serif`,\n    fontDisplay: \"swap\",\n    src: `@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap')`,\n  },\n  html: {\n    fontFamily: \"'Roboto', sans-serif\",\n  },\n});\n\nglobalStyles();\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAmBA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AAJA;AAUA;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AASA;;;;;;;;;;;;;AChCA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAUA;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAWA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAbA;AADA;AAmBA;AACA;AADA;AA5BA;AAiCA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AACA;AADA;AADA;AAAA;AAKA;AAAA;AACA;AACA;AADA;AADA;AAAA;AAbA;AAmBA;AAzBA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;;AA6BA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AANA;AAWA;;;;A","sourceRoot":""}