{"version":3,"file":"main.640be27f2c9930438ac8.hot-update.js","sources":["webpack:///./src/components/Avatar/components/Avatar.types.ts"],"sourcesContent":["import { RadiiTypes, ShadowType } from \"@sampingan-ui/core\";\nimport React from \"react\";\nimport { GeneralProperties } from \"sampingan-types\";\n\nexport interface AvatarProps extends GeneralProperties {\n  /**\n   * Specifies the path to the image\n   */\n  src?: string;\n  /**\n   * Specifies an alternate text for an image\n   */\n  alt: string;\n  /**\n   * Specifies the size of avatar\n   */\n  size?: AvatarSizeType;\n  /**\n   * Specifies the radius of avatar container\n   */\n  radius?: RadiiTypes;\n  /**\n   * indicates like how far card from the ground\n   */\n  elevation?: ShadowType;\n  /**\n   * a Class for `img` attribute\n   */\n  imageClassName?: string;\n  /**\n   * a Class for Text-Only avatar\n   */\n  fallbackClassName?: string;\n  /**\n   * action when click the avatar\n   */\n  onClick?: (e: React.MouseEvent<HTMLSpanElement>) => void;\n  /**\n   * property is used to specify how an image should be resized to objectFit its container.\n   */\n  objectFit?:\n    | \"fill\"\n    | \"contain\"\n    | \"cover\"\n    | \"none\"\n    | \"scale-down\"\n    | \"contain\"\n    | \"inherit\";\n  /**\n   * A callback providing information about the loading status of the image.\n   * This is useful in case you want to control more precisely what to render as the image is loading.\n   */\n  onLoadingStatusChange?: (\n    status: \"idle\" | \"loading\" | \"loaded\" | \"error\"\n  ) => void;\n}\n\nexport const avatarSize = {\n  sm: 16,\n  md: 32,\n  lg: 40,\n  xlg: 96,\n  hero: 128,\n};\n\nexport type AvatarSize = typeof avatarSize;\nexport type AvatarSizeType = keyof typeof avatarSize;\n\nexport const defaultAvatarProps: AvatarProps = {\n  id: \"Sampingan--Avatar--lg\",\n  className: \"Sampingan--Avatar--lg--className\",\n  alt: \"Sampingan UI\",\n  size: \"lg\",\n  objectFit: \"cover\",\n  radius: \"rounded\",\n  elevation: \"interactive\",\n  onClick: () => null,\n  onLoadingStatusChange: () => null,\n};\n"],"mappings":";;;;;;;;;;;AAyDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AATA;;;;A","sourceRoot":""}