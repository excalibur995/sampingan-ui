{"version":3,"file":"main.6ac5be6510c847c4a846.hot-update.js","sources":["webpack:///./src/components/Avatar/Avatar.styled.tsx","webpack:///./src/components/Avatar/Avatar.tsx","webpack:///./src/stories/atom/Avatar.stories.tsx"],"sourcesContent":["import { styled } from \"stitches.config\";\nimport { Root, Image, Fallback } from \"@radix-ui/react-avatar\";\n\nexport const AvatarContainer = styled(Root, {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"middle\",\n  overflow: \"hidden\",\n  userSelect: \"none\",\n  backgroundColor: \"$N400\",\n  cursor: \"pointer\",\n  variants: {\n    size: {\n      sm: {\n        size: avatarSize.sm,\n      },\n      md: {\n        size: avatarSize.md,\n      },\n      lg: {\n        size: avatarSize.lg,\n      },\n      xlg: {\n        size: avatarSize.xlg,\n      },\n      hero: {\n        size: avatarSize.hero,\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"lg\",\n  },\n});\n\nexport const AvatarImage = styled(Image, {\n  width: \"100%\",\n  height: \"100%\",\n  borderRadius: \"inherit\",\n});\nexport const AvatarUsername = styled(Fallback, {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  width: \"100%\",\n  height: \"100%\",\n  backgroundColor: \"white\",\n  color: \"$B500\",\n});\n","import React, { forwardRef } from \"react\";\nimport { AvatarProps, defaultAvatarProps } from \"./Avatar.types\";\nimport {\n  AvatarContainer,\n  AvatarImage,\n  avatarSize,\n  AvatarUsername,\n} from \"./Avatar.styled\";\nimport { getUserInital } from \"src/utils\";\n\nexport const Avatar = forwardRef<HTMLImageElement, AvatarProps>(\n  (\n    {\n      id,\n      alt,\n      src,\n      size,\n      radius,\n      elevation,\n      fit,\n      className,\n      imageClassName,\n      fallbackClassName,\n      onClick,\n      onLoadingStatusChange,\n    },\n    ref\n  ) => {\n    const fallbackFontSize = avatarSize[size ?? defaultAvatarProps.size!] * 0.6;\n    return (\n      <AvatarContainer\n        className={className}\n        css={{\n          borderRadius: `$${radius}`,\n          boxShadow: `$${elevation}`,\n        }}\n        size={size}\n        onClick={onClick}\n      >\n        <AvatarImage\n          id={id}\n          ref={ref}\n          src={src}\n          alt={alt}\n          css={{\n            objectFit: fit,\n          }}\n          className={imageClassName}\n          onLoadingStatusChange={onLoadingStatusChange}\n        />\n        <AvatarUsername\n          css={{\n            fontSize: fallbackFontSize,\n          }}\n          className={fallbackClassName}\n        >\n          {getUserInital(alt)}\n        </AvatarUsername>\n      </AvatarContainer>\n    );\n  }\n);\n\nconst componentName = Avatar.displayName || Avatar.name;\nAvatar.defaultProps = defaultAvatarProps;\nAvatar.displayName = \"Avatar\" + \"(\" + componentName + \")\";\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { Story, Meta } from \\\"@storybook/react/types-6-0\\\";\\n\\nimport Avatar from \\\"../../components/Avatar\\\";\\nimport {\\n  AvatarProps,\\n  defaultAvatarProps as avatarDefaultProps,\\n} from \\\"../../components/Avatar/Avatar.types\\\";\\nimport { avatarSize } from \\\"src/components/Avatar/Avatar.styled\\\";\\n\\nexport default {\\n  title: \\\"Atom/Avatar\\\",\\n  component: Avatar,\\n} as Meta;\\n\\nconst Template: Story<AvatarProps> = (props) => <Avatar {...props} />;\\nconst List: Story<AvatarProps> = (props) => {\\n  return (\\n    <React.Fragment>\\n      {Object.keys(avatarSize).map((value) => (\\n        <Avatar size={value} {...props} />\\n      ))}\\n    </React.Fragment>\\n  );\\n};\\nexport const WithImage = Template.bind({});\\nexport const WithoutImage = Template.bind({});\\nexport const onClick = Template.bind({});\\nexport const AvatarList = List.bind({});\\n\\nWithImage.args = {\\n  ...avatarDefaultProps,\\n  src: \\\"https://images.unsplash.com/photo-1511485977113-f34c92461ad9?ixlib=rb-1.2.1&w=128&h=128&dpr=2&q=80\\\",\\n};\\n\\nWithoutImage.args = {\\n  ...avatarDefaultProps,\\n};\\n\\nonClick.args = {\\n  ...avatarDefaultProps,\\n  onClick: () => alert(\\\"Image onClick\\\"),\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"WithImage\":{\"startLoc\":{\"col\":37,\"line\":16},\"endLoc\":{\"col\":69,\"line\":16},\"startBody\":{\"col\":37,\"line\":16},\"endBody\":{\"col\":69,\"line\":16}},\"WithoutImage\":{\"startLoc\":{\"col\":37,\"line\":16},\"endLoc\":{\"col\":69,\"line\":16},\"startBody\":{\"col\":37,\"line\":16},\"endBody\":{\"col\":69,\"line\":16}},\"onClick\":{\"startLoc\":{\"col\":37,\"line\":16},\"endLoc\":{\"col\":69,\"line\":16},\"startBody\":{\"col\":37,\"line\":16},\"endBody\":{\"col\":69,\"line\":16}},\"AvatarList\":{\"startLoc\":{\"col\":33,\"line\":17},\"endLoc\":{\"col\":1,\"line\":25},\"startBody\":{\"col\":33,\"line\":17},\"endBody\":{\"col\":1,\"line\":25}}};\n    \nimport React from \"react\";\nimport { Story, Meta } from \"@storybook/react/types-6-0\";\n\nimport Avatar from \"../../components/Avatar\";\nimport {\n  AvatarProps,\n  defaultAvatarProps as avatarDefaultProps,\n} from \"../../components/Avatar/Avatar.types\";\nimport { avatarSize } from \"src/components/Avatar/Avatar.styled\";\n\nexport default {\n  title: \"Atom/Avatar\",\n  component: Avatar,\n} as Meta;\n\nconst Template: Story<AvatarProps> = (props) => <Avatar {...props} />;\nconst List: Story<AvatarProps> = (props) => {\n  return (\n    <React.Fragment>\n      {Object.keys(avatarSize).map((value) => (\n        <Avatar size={value} {...props} />\n      ))}\n    </React.Fragment>\n  );\n};\nexport const WithImage = Template.bind({});;\nexport const WithoutImage = Template.bind({});;\nexport const onClick = Template.bind({});;\nexport const AvatarList = List.bind({});\n\nWithImage.args = {\n  ...avatarDefaultProps,\n  src: \"https://images.unsplash.com/photo-1511485977113-f34c92461ad9?ixlib=rb-1.2.1&w=128&h=128&dpr=2&q=80\",\n};\n\nWithoutImage.args = {\n  ...avatarDefaultProps,\n};\n\nonClick.args = {\n  ...avatarDefaultProps,\n  onClick: () => alert(\"Image onClick\"),\n};\n\n\n\nWithImage.parameters = { storySource: { source: \"(props) => <Avatar {...props} />\" }, ...WithImage.parameters };\nWithoutImage.parameters = { storySource: { source: \"(props) => <Avatar {...props} />\" }, ...WithoutImage.parameters };\nonClick.parameters = { storySource: { source: \"(props) => <Avatar {...props} />\" }, ...onClick.parameters };\nAvatarList.parameters = { storySource: { source: \"(props) => {\\n  return (\\n    <React.Fragment>\\n      {Object.keys(avatarSize).map((value) => (\\n        <Avatar size={value} {...props} />\\n      ))}\\n    </React.Fragment>\\n  );\\n}\" }, ...AvatarList.parameters };"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAbA;AADA;AAmBA;AACA;AADA;AA5BA;AAiCA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AAMA;;;AAEA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AATA;AAYA;AACA;AADA;AAGA;AAJA;AAAA;AApBA;AA8BA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AAIA;;AAEA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AADA;AADA;AAMA;AACA;AATA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AAFA;AAKA;AAIA;AAEA;AAAA;AAAA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}