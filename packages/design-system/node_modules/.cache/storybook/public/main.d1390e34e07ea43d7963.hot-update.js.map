{"version":3,"file":"main.d1390e34e07ea43d7963.hot-update.js","sources":["webpack:///../core/foundations/index.ts","webpack:///../core/foundations/radii.ts","webpack:///../core/foundations/responsive.ts","webpack:///../core/foundations/shadow.ts","webpack:///../core/foundations/token.ts","webpack:///../core/index.ts","webpack:///./.storybook/preview.js","webpack:///./src/components/Avatar/Avatar.styled.tsx","webpack:///./src/components/Avatar/Avatar.tsx","webpack:///./src/stories/atom/Avatar.stories.tsx","webpack:///./src/utils/index.ts","webpack:///./stitches.config.ts"],"sourcesContent":["import colors, { SampinganColorsPallete, SampinganColors } from \"./token\";\nimport responsive, {\n  Breakpoints,\n  MediaQueries,\n  Responsive,\n} from \"./responsive\";\nimport shadows, { ShadowType, Shadows } from \"./shadow\";\nimport radii, { RadiiTypes, Radii } from \"./radii\";\n\nexport interface Foundations {\n  colors: SampinganColors;\n  responsive: Responsive;\n  shadows: Shadows;\n  radii: Radii;\n}\n\nexport type {\n  SampinganColors,\n  SampinganColorsPallete,\n  Breakpoints,\n  MediaQueries,\n  ShadowType,\n  RadiiTypes,\n  Radii,\n};\n\nconst foundations: Foundations = {\n  colors,\n  responsive,\n  shadows,\n  radii,\n};\n\nexport default foundations;\n","const radii = {\n  square: \"0px\",\n  semi_rounded: \"4px\",\n  rounded: \"8px\",\n  circle: \"9999px\",\n};\n\nexport type Radii = typeof radii;\nexport type RadiiTypes = keyof typeof radii;\n\nexport default radii;\n","/**\n * breackpoints in px\n */\nconst breakpoints = {\n  \"@xs\": 360,\n  \"@sm\": 640,\n  \"@md\": 840,\n  \"@lg\": 1024,\n  \"@xl\": 1200,\n  \"@xxl\": 1440,\n};\n\n/**\n * for stitches only\n */\nconst mediaQueries: MediaQueries = (() => {\n  const media_query = {} as MediaQueries;\n  for (const points in breakpoints) {\n    media_query[points] = `min-width: ${breakpoints[points]}px`;\n  }\n  return media_query;\n})();\n\nconst responsive = {\n  breakpoints,\n  mediaQueries,\n};\n\nexport type Breakpoints = keyof typeof breakpoints;\nexport type MediaQueries = Record<Breakpoints, string>;\nexport type Responsive = typeof responsive;\n\nexport default responsive;\n","const shadowColor = \"hsla(0, 0%, 90%, 0.77)\";\n\nconst shadows = {\n  none: \"none\",\n  interactive: `0px 0px 1px 1px ${shadowColor}`,\n  hover: `0px 0px 5px 2px ${shadowColor}`,\n  floar: `0px 0px 13px 6px ${shadowColor}`,\n};\n\nexport type Shadows = typeof shadows;\nexport type ShadowType = keyof typeof shadows;\n\nexport default shadows;\n","const red = {\n  R50: \"#FFEBEE\",\n  R500: \"#E83730\",\n  R900: \"#BA1816\",\n};\n\nconst green = {\n  G50: \"#E2F3F2\",\n  G500: \"#2A9D90\",\n  G900: \"#195347\",\n};\n\nconst blue = {\n  B50: \"#E2F4FA\",\n  B500: \"#3DA5D9\",\n  B900: \"#215581\",\n};\n\nconst yellow = {\n  Y50: \"#FFF8E1\",\n  Y500: \"#FEC209\",\n  Y900: \"#DC5F00\",\n};\n\nconst neutral = {\n  N50: \"#FFFFFF\",\n  N100: \"#F7F7F7\",\n  N200: \"#ECECEC\",\n  N400: \"#CCCCCC\",\n  N500: \"#C4C4C4\",\n  N600: \"#9B9B9B\",\n  N900: \"#262626\",\n};\n\nconst sampinganUiColors = {\n  ...red,\n  ...green,\n  ...blue,\n  ...yellow,\n  ...neutral,\n};\n\nexport type SampinganColors = typeof sampinganUiColors;\nexport type SampinganColorsPallete = keyof typeof sampinganUiColors;\n\nexport default sampinganUiColors;\n","import foundations, {\n  Breakpoints,\n  Foundations,\n  MediaQueries,\n  SampinganColors,\n  SampinganColorsPallete,\n  ShadowType,\n  Radii,\n  RadiiTypes,\n} from \"./foundations\";\n\nconst { colors, responsive, shadows, radii } = foundations;\n\nexport {\n  colors,\n  responsive,\n  shadows,\n  radii,\n  Breakpoints,\n  Foundations,\n  MediaQueries,\n  SampinganColors,\n  SampinganColorsPallete,\n  ShadowType,\n  Radii,\n  RadiiTypes,\n};\n","import React from \"react\";\nimport { themes } from \"@storybook/theming\";\n\nexport const parameters = {\n  actions: { argTypesRegex: \"^on[A-Z].*\" },\n  controls: { expanded: true },\n  darkMode: {\n    dark: { ...themes.dark, appBg: \"black\" },\n    light: { ...themes.normal, appBg: \"white\" },\n  },\n};\n\nexport const decorators = [\n  (Story) => (\n    <>\n      <Story />\n    </>\n  ),\n];\n","import { styled } from \"stitches.config\";\nimport { Root, Image, Fallback } from \"@radix-ui/react-avatar\";\n\nexport const avatarSize = {\n  sm: 16,\n  md: 32,\n  lg: 40,\n  xlg: 96,\n  hero: 128,\n};\n\nexport const AvatarContainer = styled(Root, {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"middle\",\n  overflow: \"hidden\",\n  userSelect: \"none\",\n  backgroundColor: \"$N400\",\n  cursor: \"pointer\",\n  variants: {\n    size: {\n      sm: {\n        size: avatarSize.sm,\n      },\n      md: {\n        size: avatarSize.md,\n      },\n      lg: {\n        size: avatarSize.lg,\n      },\n      xlg: {\n        size: avatarSize.xlg,\n      },\n      hero: {\n        size: avatarSize.hero,\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"lg\",\n  },\n});\n\nexport const AvatarImage = styled(Image, {\n  width: \"100%\",\n  height: \"100%\",\n  borderRadius: \"inherit\",\n});\nexport const AvatarUsername = styled(Fallback, {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  width: \"100%\",\n  height: \"100%\",\n  backgroundColor: \"white\",\n  color: \"$B500\",\n});\n","import React, { forwardRef } from \"react\";\nimport { AvatarProps, defaultAvatarProps } from \"./Avatar.types\";\nimport {\n  AvatarContainer,\n  AvatarImage,\n  avatarSize,\n  AvatarUsername,\n} from \"./Avatar.styled\";\nimport { getUserInital } from \"src/utils\";\n\nexport const Avatar = forwardRef<HTMLImageElement, AvatarProps>(\n  (\n    {\n      id,\n      alt,\n      src,\n      size,\n      radius,\n      elevation,\n      fit,\n      className,\n      imageClassName,\n      fallbackClassName,\n      onClick,\n      onLoadingStatusChange,\n    },\n    ref\n  ) => {\n    return (\n      <AvatarContainer\n        className={className}\n        css={{\n          borderRadius: `$${radius}`,\n          boxShadow: `$${elevation}`,\n        }}\n        size={size}\n        onClick={onClick}\n      >\n        <AvatarImage\n          id={id}\n          ref={ref}\n          src={src}\n          alt={alt}\n          css={{\n            objectFit: fit,\n          }}\n          className={imageClassName}\n          onLoadingStatusChange={onLoadingStatusChange}\n        />\n        <AvatarUsername\n          css={{\n            fontSize: avatarSize[size ?? defaultAvatarProps.size!],\n          }}\n          className={fallbackClassName}\n        >\n          {getUserInital(alt)}\n        </AvatarUsername>\n      </AvatarContainer>\n    );\n  }\n);\n\nconst componentName = Avatar.displayName || Avatar.name;\nAvatar.defaultProps = defaultAvatarProps;\nAvatar.displayName = \"Avatar\" + \"(\" + componentName + \")\";\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { Story, Meta } from \\\"@storybook/react/types-6-0\\\";\\n\\nimport Avatar from \\\"../../components/Avatar\\\";\\nimport {\\n  AvatarProps,\\n  defaultAvatarProps as avatarDefaultProps,\\n} from \\\"../../components/Avatar/Avatar.types\\\";\\n\\nexport default {\\n  title: \\\"Atom/Avatar\\\",\\n  component: Avatar,\\n} as Meta;\\n\\nconst Template: Story<AvatarProps> = (props) => <Avatar {...props} />;\\nexport const WithImage = Template.bind({});\\nexport const WithoutImage = Template.bind({});\\nexport const onClick = Template.bind({});\\n\\nWithImage.args = {\\n  ...avatarDefaultProps,\\n  src: \\\"https://images.unsplash.com/photo-1511485977113-f34c92461ad9?ixlib=rb-1.2.1&w=128&h=128&dpr=2&q=80\\\",\\n};\\n\\nWithoutImage.args = {\\n  ...avatarDefaultProps,\\n};\\n\\nonClick.args = {\\n  ...avatarDefaultProps,\\n  onClick: () => alert(\\\"Image onClick\\\"),\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"WithImage\":{\"startLoc\":{\"col\":37,\"line\":15},\"endLoc\":{\"col\":69,\"line\":15},\"startBody\":{\"col\":37,\"line\":15},\"endBody\":{\"col\":69,\"line\":15}},\"WithoutImage\":{\"startLoc\":{\"col\":37,\"line\":15},\"endLoc\":{\"col\":69,\"line\":15},\"startBody\":{\"col\":37,\"line\":15},\"endBody\":{\"col\":69,\"line\":15}},\"onClick\":{\"startLoc\":{\"col\":37,\"line\":15},\"endLoc\":{\"col\":69,\"line\":15},\"startBody\":{\"col\":37,\"line\":15},\"endBody\":{\"col\":69,\"line\":15}}};\n    \nimport React from \"react\";\nimport { Story, Meta } from \"@storybook/react/types-6-0\";\n\nimport Avatar from \"../../components/Avatar\";\nimport {\n  AvatarProps,\n  defaultAvatarProps as avatarDefaultProps,\n} from \"../../components/Avatar/Avatar.types\";\n\nexport default {\n  title: \"Atom/Avatar\",\n  component: Avatar,\n} as Meta;\n\nconst Template: Story<AvatarProps> = (props) => <Avatar {...props} />;\nexport const WithImage = Template.bind({});;\nexport const WithoutImage = Template.bind({});;\nexport const onClick = Template.bind({});\n\nWithImage.args = {\n  ...avatarDefaultProps,\n  src: \"https://images.unsplash.com/photo-1511485977113-f34c92461ad9?ixlib=rb-1.2.1&w=128&h=128&dpr=2&q=80\",\n};\n\nWithoutImage.args = {\n  ...avatarDefaultProps,\n};\n\nonClick.args = {\n  ...avatarDefaultProps,\n  onClick: () => alert(\"Image onClick\"),\n};\n\n\n\nWithImage.parameters = { storySource: { source: \"(props) => <Avatar {...props} />\" }, ...WithImage.parameters };\nWithoutImage.parameters = { storySource: { source: \"(props) => <Avatar {...props} />\" }, ...WithoutImage.parameters };\nonClick.parameters = { storySource: { source: \"(props) => <Avatar {...props} />\" }, ...onClick.parameters };","export function generateUniqueId(length: number = 5) {\n  let result = \"\";\n  const characters = `ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+=-?/><:;}{[]\\|`;\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nexport function getUserInital(name?: string) {\n  if (name) {\n    const rgx = new RegExp(/(\\p{L}{1})\\p{L}+/, \"gu\");\n    const initials = [...name.matchAll(rgx)] || [];\n    return (\n      (initials.shift()?.[1] || \"\") + (initials.pop()?.[1] || \"\")\n    ).toUpperCase();\n  }\n  return name;\n}\n","import { createStitches } from \"@stitches/react\";\nimport { colors, responsive, shadows, radii } from \"@sampingan-ui/core\";\n\nexport const { styled, css, keyframes, globalCss, getCssText } = createStitches(\n  {\n    theme: {\n      colors,\n      shadows,\n      radii,\n    },\n    utils: {\n      size: (value: string | number) => ({\n        width: value,\n        height: value,\n      }),\n    },\n    media: responsive.mediaQueries,\n  }\n);\n\nexport const globalStyles = globalCss({});\n\nglobalStyles();\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAmBA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AAJA;AAUA;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AASA;;;;;;;;;;;;;AChCA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAUA;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAWA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAHA;AASA;AACA;AACA;AAAA;AADA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAbA;AADA;AAmBA;AACA;AADA;AA5BA;AAiCA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AAMA;;;AAEA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AATA;AAYA;AACA;AADA;AAGA;AAJA;AAAA;AApBA;AA8BA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;;AAKA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AAFA;AAKA;AAIA;AAEA;AAAA;AAAA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AADA;AAMA;AAZA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;;AAgBA;AAEA;;;;A","sourceRoot":""}