webpackHotUpdate("main",{

/***/ "./src/components/Avatar/Avatar.tsx":
/*!******************************************!*\
  !*** ./src/components/Avatar/Avatar.tsx ***!
  \******************************************/
/*! exports provided: Avatar */
/*! exports used: Avatar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Avatar; });
/* harmony import */ var _Users_raihanalbazzy_workspace_work_sampingan_sampingan_ui_node_modules_core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! /Users/raihanalbazzy/workspace/work/sampingan/sampingan-ui/node_modules/core-js/modules/es.function.name.js */ "../../node_modules/core-js/modules/es.function.name.js");
/* harmony import */ var _Users_raihanalbazzy_workspace_work_sampingan_sampingan_ui_node_modules_core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_raihanalbazzy_workspace_work_sampingan_sampingan_ui_node_modules_core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Avatar_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Avatar.types */ "./src/components/Avatar/Avatar.types.ts");
/* harmony import */ var _Avatar_styled__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Avatar.styled */ "./src/components/Avatar/Avatar.styled.tsx");
/* harmony import */ var src_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/utils */ "./src/utils/index.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/react/jsx-runtime.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__);







var Avatar = /*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_1__["forwardRef"])(function (_ref, ref) {
  var id = _ref.id,
      alt = _ref.alt,
      src = _ref.src,
      size = _ref.size,
      radius = _ref.radius,
      elevation = _ref.elevation,
      fit = _ref.fit,
      className = _ref.className,
      imageClassName = _ref.imageClassName,
      fallbackClassName = _ref.fallbackClassName,
      onClick = _ref.onClick,
      onLoadingStatusChange = _ref.onLoadingStatusChange;
  return /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__["jsxs"])(_Avatar_styled__WEBPACK_IMPORTED_MODULE_3__[/* AvatarContainer */ "a"], {
    className: className,
    css: {
      borderRadius: "$" + radius,
      boxShadow: "$" + elevation
    },
    size: size,
    onClick: onClick,
    children: [/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__["jsx"])(_Avatar_styled__WEBPACK_IMPORTED_MODULE_3__[/* AvatarImage */ "b"], {
      id: id,
      ref: ref,
      src: src,
      alt: alt,
      css: {
        objectFit: fit
      },
      className: imageClassName,
      onLoadingStatusChange: onLoadingStatusChange
    }), /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__["jsx"])(_Avatar_styled__WEBPACK_IMPORTED_MODULE_3__[/* AvatarUsername */ "c"], {
      css: {
        fontSize: _Avatar_styled__WEBPACK_IMPORTED_MODULE_3__[/* avatarSize */ "d"][size !== null && size !== void 0 ? size : _Avatar_types__WEBPACK_IMPORTED_MODULE_2__[/* defaultAvatarProps */ "a"].size] * 0.5
      },
      className: fallbackClassName,
      children: Object(src_utils__WEBPACK_IMPORTED_MODULE_4__[/* getUserInital */ "a"])(alt)
    })]
  });
});
var componentName = Avatar.displayName || Avatar.name;
Avatar.defaultProps = _Avatar_types__WEBPACK_IMPORTED_MODULE_2__[/* defaultAvatarProps */ "a"];
Avatar.displayName = "Avatar" + "(" + componentName + ")";

try {
    // @ts-ignore
    Avatar.displayName = "Avatar";
    // @ts-ignore
    Avatar.__docgenInfo = { "description": "", "displayName": "Avatar", "props": { "src": { "defaultValue": null, "description": "Specifies the path to the image", "name": "src", "required": false, "type": { "name": "string" } }, "alt": { "defaultValue": null, "description": "Specifies an alternate text for an image", "name": "alt", "required": true, "type": { "name": "string" } }, "size": { "defaultValue": null, "description": "Specifies the size of avatar", "name": "size", "required": false, "type": { "name": "enum", "value": [{ "value": "\"sm\"" }, { "value": "\"md\"" }, { "value": "\"lg\"" }, { "value": "\"xlg\"" }, { "value": "\"hero\"" }] } }, "radius": { "defaultValue": null, "description": "Specifies the radius of avatar container", "name": "radius", "required": false, "type": { "name": "enum", "value": [{ "value": "\"square\"" }, { "value": "\"semi_rounded\"" }, { "value": "\"rounded\"" }, { "value": "\"circle\"" }] } }, "elevation": { "defaultValue": null, "description": "indicates like how far card from the ground", "name": "elevation", "required": false, "type": { "name": "enum", "value": [{ "value": "\"none\"" }, { "value": "\"interactive\"" }, { "value": "\"hover\"" }, { "value": "\"floar\"" }] } }, "imageClassName": { "defaultValue": null, "description": "a Class for `img` attribute", "name": "imageClassName", "required": false, "type": { "name": "string" } }, "fallbackClassName": { "defaultValue": null, "description": "a Class for Text-Only avatar", "name": "fallbackClassName", "required": false, "type": { "name": "string" } }, "onClick": { "defaultValue": null, "description": "action when click the avatar", "name": "onClick", "required": false, "type": { "name": "(() => void)" } }, "fit": { "defaultValue": null, "description": "property is used to specify how an image should be resized to fit its container.", "name": "fit", "required": false, "type": { "name": "enum", "value": [{ "value": "\"none\"" }, { "value": "\"fill\"" }, { "value": "\"contain\"" }, { "value": "\"cover\"" }, { "value": "\"scale-down\"" }, { "value": "\"inherit\"" }] } }, "onLoadingStatusChange": { "defaultValue": null, "description": "A callback providing information about the loading status of the image.\nThis is useful in case you want to control more precisely what to render as the image is loading.", "name": "onLoadingStatusChange", "required": false, "type": { "name": "((status: \"idle\" | \"loading\" | \"loaded\" | \"error\") => void)" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/Avatar/Avatar.tsx#Avatar"] = { docgenInfo: Avatar.__docgenInfo, name: "Avatar", path: "src/components/Avatar/Avatar.tsx#Avatar" };
}
catch (__react_docgen_typescript_loader_error) { }


/***/ })

})
//# sourceMappingURL=main.e81ec12c8c08fbf64e18.hot-update.js.map